<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="DESKTOP-QMO9A9N" name="Default test" tests="15" failures="0" timestamp="18 Dec 2019 06:46:14 GMT" time="68.189" errors="0">
  <testcase name="@BeforeMethod backLogin" time="0.0" classname="azhouqianqian.BackgroundTest">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at azhouqianqian.BackgroundTest.backLogin(BackgroundTest.java:26)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:589)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod backLogin -->
  <testcase name="@BeforeMethod backLogin" time="0.0" classname="azhouqianqian.BackgroundTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod backLogin -->
  <testcase name="@BeforeMethod backLogin" time="0.0" classname="azhouqianqian.BackgroundTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod backLogin -->
  <testcase name="@BeforeMethod backLogin" time="0.0" classname="azhouqianqian.BackgroundTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod backLogin -->
  <testcase name="@BeforeMethod backLogin" time="0.0" classname="azhouqianqian.BackgroundTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod backLogin -->
  <testcase name="@BeforeMethod backLogin" time="0.0" classname="azhouqianqian.BackgroundTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod backLogin -->
  <testcase name="@BeforeMethod backLogin" time="0.0" classname="azhouqianqian.BackgroundTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod backLogin -->
  <testcase name="@BeforeMethod backLogin" time="0.0" classname="azhouqianqian.BackgroundTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod backLogin -->
  <testcase name="@BeforeMethod backLogin" time="0.0" classname="azhouqianqian.BackgroundTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod backLogin -->
  <testcase name="@BeforeMethod backLogin" time="0.0" classname="azhouqianqian.BackgroundTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod backLogin -->
  <testcase name="@BeforeMethod backLogin" time="0.0" classname="azhouqianqian.BackgroundTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod backLogin -->
  <testcase name="@BeforeMethod backLogin" time="0.0" classname="azhouqianqian.BackgroundTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod backLogin -->
  <testcase name="@BeforeMethod backLogin" time="0.0" classname="azhouqianqian.BackgroundTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod backLogin -->
  <testcase name="@BeforeMethod backLogin" time="0.0" classname="azhouqianqian.BackgroundTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod backLogin -->
  <testcase name="@BeforeMethod backLogin" time="0.0" classname="azhouqianqian.BackgroundTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod backLogin -->
  <testcase name="@AfterClass doAfterMethod" time="0.0" classname="azhouqianqian.BackgroundTest">
    <skipped/>
  </testcase> <!-- @AfterClass doAfterMethod -->
  <testcase name="Show_list7" time="0.0" classname="azhouqianqian.BackgroundTest">
    <skipped/>
  </testcase> <!-- Show_list7 -->
  <testcase name="testAll6" time="0.0" classname="azhouqianqian.BackgroundTest">
    <skipped/>
  </testcase> <!-- testAll6 -->
  <testcase name="test_add1" time="0.0" classname="azhouqianqian.BackgroundTest">
    <skipped/>
  </testcase> <!-- test_add1 -->
  <testcase name="test_add2" time="0.0" classname="azhouqianqian.BackgroundTest">
    <skipped/>
  </testcase> <!-- test_add2 -->
  <testcase name="test_add3" time="0.0" classname="azhouqianqian.BackgroundTest">
    <skipped/>
  </testcase> <!-- test_add3 -->
  <testcase name="test_add4" time="0.0" classname="azhouqianqian.BackgroundTest">
    <skipped/>
  </testcase> <!-- test_add4 -->
  <testcase name="test_add5" time="0.0" classname="azhouqianqian.BackgroundTest">
    <skipped/>
  </testcase> <!-- test_add5 -->
  <testcase name="test_add6" time="0.0" classname="azhouqianqian.BackgroundTest">
    <skipped/>
  </testcase> <!-- test_add6 -->
  <testcase name="test_add7" time="0.0" classname="azhouqianqian.BackgroundTest">
    <skipped/>
  </testcase> <!-- test_add7 -->
  <testcase name="test_show8" time="0.0" classname="azhouqianqian.BackgroundTest">
    <skipped/>
  </testcase> <!-- test_show8 -->
  <testcase name="testindent1" time="0.0" classname="azhouqianqian.BackgroundTest">
    <skipped/>
  </testcase> <!-- testindent1 -->
  <testcase name="testindent2" time="0.0" classname="azhouqianqian.BackgroundTest">
    <skipped/>
  </testcase> <!-- testindent2 -->
  <testcase name="testindent3" time="0.0" classname="azhouqianqian.BackgroundTest">
    <skipped/>
  </testcase> <!-- testindent3 -->
  <testcase name="testindent4" time="0.0" classname="azhouqianqian.BackgroundTest">
    <skipped/>
  </testcase> <!-- testindent4 -->
  <testcase name="testindent5" time="0.0" classname="azhouqianqian.BackgroundTest">
    <skipped/>
  </testcase> <!-- testindent5 -->
</testsuite> <!-- Default test -->
